<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Verify" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory),Templates.msbuild))\Templates.Settings.targets" />
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory),Templates.msbuild))\tools\Verify.tasks" />

  <PropertyGroup>
    <ProjectGuid>{248e0edd-b63b-4e8e-b7d3-166efdd893c0}</ProjectGuid>
    <ZipCommand>$(TemplatesTools)\7za.exe x </ZipCommand>
    <DnuBuildCommand>dnu build</DnuBuildCommand>
    <DnuRestoreCommand>dnu restore --source $(PackageSource) --fallbacksource $(PackageFallbackSource)</DnuRestoreCommand>
    <TemplatesTestPath>$(OutputPath)\Test\</TemplatesTestPath>
    <TemplatesTestRulesPath>$(OutputPath)\Test\Rules\Rules\</TemplatesTestRulesPath>
  </PropertyGroup>
  <UsingTask TaskName="Microsoft.Web.MsBuildTasks.RegexReplace" AssemblyFile="$(TemplatesTools)\Microsoft.Web.MsBuildTasks.dll"  />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' " />
  
  <ItemDefinitionGroup>
    <TemplatesToVerify>
      <IsRulesPackage>false</IsRulesPackage>
      <ProjectGuid/>
    </TemplatesToVerify>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup>
    <RulesToVerify>
      <BaseTemplate/>
      <AdditionalRuleFiles/>
      <ProjectGuid/>
    </RulesToVerify>
  </ItemDefinitionGroup>
  
  <ItemGroup>
    <TemplatesToVerify Include="$(OutputPath)\ProjectTemplates\Rules.zip">
        <IsRulesPackage>true</IsRulesPackage>
    </TemplatesToVerify>
    <TemplatesToVerify Include="$(OutputPath)\ProjectTemplates\EmptyWeb.zip">
      <ProjectGuid>{BEAC15B9-5742-4C8D-9072-4C7B1C916C38}</ProjectGuid>
    </TemplatesToVerify>
    <TemplatesToVerify Include="$(OutputPath)\ProjectTemplates\ConsoleApp.zip">
      <ProjectGuid>{8979AF70-A472-40D3-8171-812F9E11C276}</ProjectGuid>
    </TemplatesToVerify>
    <TemplatesToVerify Include="$(OutputPath)\ProjectTemplates\ClassLibrary.zip">
      <ProjectGuid>{E451D2C2-A401-46B2-B181-B22221AC0D83}</ProjectGuid>
    </TemplatesToVerify>
    <TemplatesToVerify Include="$(OutputPath)\ProjectTemplates\WebAPI.zip">
      <ProjectGuid>{2D35BE10-ECC4-4639-96AE-925702B83655}</ProjectGuid>
    </TemplatesToVerify>
    <TemplatesToVerify Include="$(OutputPath)\ProjectTemplates\StarterWeb.zip">
      <ProjectGuid>{80252DCA-8071-4627-931A-3F4B2EB301D1}</ProjectGuid>
    </TemplatesToVerify>
  </ItemGroup>

  <ItemGroup>
    <RulesToVerify Include="$(TemplatesTestRulesPath)StarterWeb\IndividualAuth">
      <BaseTemplate>StarterWeb</BaseTemplate>
      <AdditionalRuleFiles>..\CommonAuth\**\*.*</AdditionalRuleFiles>
      <ProjectGuid>{EACE0625-D9C4-4BAD-A2D9-8269FD0ABF84}</ProjectGuid>
    </RulesToVerify>
  </ItemGroup>
  
  <Target Name="ExtractAllTemplates" Inputs="@(TemplatesToVerify)" Outputs="$(TemplatesTestPath)%(Filename)\%(Filename).vstemplate">
    <PropertyGroup>
      <TargetName>%(TemplatesToVerify.Filename)</TargetName>
      <TestPath>$(TemplatesTestPath)$(TargetName)\</TestPath>
      <IsRulesPackage>%(TemplatesToVerify.IsRulesPackage)</IsRulesPackage>
      <ProjectGuid>%(TemplatesToVerify.ProjectGuid)</ProjectGuid>
    </PropertyGroup>
    <RemoveDir Directories="$(TestPath)" />
    <MakeDir Directories="$(TestPath)" />
    <Exec WorkingDirectory="$(TestPath)" Command="$(ZipCommand) $(OutputPath)\ProjectTemplates\$(TargetName).zip * &gt; nul" />
    <ItemGroup>
      <ExtractedFiles Include="$(TestPath)\**\*.*" Condition="'$(IsRulesPackage)' == 'false'"/>
    </ItemGroup>

    <RegexReplace Files="@(ExtractedFiles)" Find="\$safeprojectname\$" Condition="('%(Extension)' == '.cshtml' or '%(Extension)' == '.cs' or '%(Extension)' == '.vstemplate' or '%(Extension)' == '.xproj')" Replace="$(TargetName)" />
    <RegexReplace Files="@(ExtractedFiles)" Find="\$guid1\$" Condition="('%(Extension)' == '.cshtml' or '%(Extension)' == '.cs' or '%(Extension)' == '.vstemplate' or '%(Extension)' == '.xproj')" Replace="$(ProjectGuid)" />
    <RegexReplace Files="@(ExtractedFiles)" Find="\$baseoutputlocation\$" Condition="('%(Extension)' == '.cshtml' or '%(Extension)' == '.cs' or '%(Extension)' == '.vstemplate' or '%(Extension)' == '.xproj')" Replace="src" />

    <RegexReplace Files="@(ExtractedFiles)" Find="\$safeprojectname\$" Condition="('%(Extension)' == '.json')" Encoding="ascii" Replace="$(TargetName)" />
    <RegexReplace Files="@(ExtractedFiles)" Find="\$guid1\$" Condition="('%(Extension)' == '.json')" Encoding="ascii" Replace="$(ProjectGuid)" />
    <RegexReplace Files="@(ExtractedFiles)" Find="\$baseoutputlocation\$" Condition="('%(Extension)' == '.json')" Encoding="ascii" Replace="src" />
  </Target>
  
  <Target Name="InstallNpmPackages">
    <Exec Command="npm install -g gulp" Condition="!Exists('$(AppData)\npm\gulp') or '$(ForceNpmInstall)' == 'true'" />
    <Exec Command="npm install -g bower" Condition="!Exists('$(AppData)\npm\bower') or '$(ForceNpmInstall)' == 'true'" />
  </Target>
  
  <Target Name="CompileRules" Inputs="@(RulesToVerify)" Outputs="$(TemplatesTestPath)%(BaseTemplate).%(Filename)\bin\Debug\%(BaseTemplate).1.0.0.nupkg" DependsOnTargets="ExtractAllTemplates">
    <PropertyGroup>
      <TargetName>%(RulesToVerify.BaseTemplate).%(RulesToVerify.Filename)</TargetName>
      <TestPath>$(TemplatesTestPath)$(TargetName)\</TestPath>
      <AdditionalRuleFiles>%(RulesToVerify.Identity)\%(RulesToVerify.AdditionalRuleFiles)</AdditionalRuleFiles>
      <RuleFiles>%(RulesToVerify.Identity)\**\*.*</RuleFiles>
      <ProjectGuid>%(RulesToVerify.ProjectGuid)</ProjectGuid>
    </PropertyGroup>
    <RemoveDir Directories="$(TestPath)" />
    <MakeDir Directories="$(TestPath)" />
    <Exec WorkingDirectory="$(TestPath)" Command="$(ZipCommand) $(OutputPath)\ProjectTemplates\%(RulesToVerify.BaseTemplate).zip * &gt; nul" />

    <ItemGroup>
      <ItemsToCopy Include="$(AdditionalRuleFiles)" Condition="'$(AdditionalRuleFiles)' != ''"/>
      <ItemsToCopy Include="$(RuleFiles)" Condition="'$(RuleFiles)' != ''"/>
    </ItemGroup> 

    <Copy SourceFiles="@(ItemsToCopy)" DestinationFiles="@(ItemsToCopy->'$(TestPath)%(RecursiveDir)%(Filename)%(Extension)')" Condition="'@(ItemsToCopy)' != ''"/>
    <Copy SourceFiles="$(TestPath)\%(RulesToVerify.BaseTemplate).xproj" DestinationFiles="$(TestPath)\$(TargetName).xproj"/>
    <ItemGroup>
      <ExtractedFiles Include="$(TestPath)\**\*.*"/>
    </ItemGroup>

    <RegexReplace Files="@(ExtractedFiles)" Find="\$safeprojectname\$" Condition="('%(Extension)' == '.cshtml' or '%(Extension)' == '.cs' or '%(Extension)' == '.vstemplate' or '%(Extension)' == '.xproj')" Replace="$(TargetName)" />
    <RegexReplace Files="@(ExtractedFiles)" Find="\$guid1\$" Condition="('%(Extension)' == '.cshtml' or '%(Extension)' == '.cs' or '%(Extension)' == '.vstemplate' or '%(Extension)' == '.xproj')" Replace="$(ProjectGuid)" />
    <RegexReplace Files="@(ExtractedFiles)" Find="\$baseoutputlocation\$" Condition="('%(Extension)' == '.cshtml' or '%(Extension)' == '.cs' or '%(Extension)' == '.vstemplate' or '%(Extension)' == '.xproj')" Replace="src" />

    <RegexReplace Files="@(ExtractedFiles)" Find="\$safeprojectname\$" Condition="('%(Extension)' == '.json')" Encoding="ascii" Replace="$(TargetName)" />
    <RegexReplace Files="@(ExtractedFiles)" Find="\$guid1\$" Condition="('%(Extension)' == '.json')" Encoding="ascii" Replace="$(ProjectGuid)" />
    <RegexReplace Files="@(ExtractedFiles)" Find="\$baseoutputlocation\$" Condition="('%(Extension)' == '.json')" Encoding="ascii" Replace="src" />

    <GetDotNetFolder Condition="'$(DotNetFolderInPath)' == 'false' and '$(DotNetFolder)' == ''">
      <Output PropertyName="DotNetFolder" TaskParameter="DotNetPath"/>
    </GetDotNetFolder>

    <Message Text="Running $(DnuRestoreCommand) on $(TestPath)" Condition="'$(IsTemplate)' == 'true'"/>
    <Exec WorkingDirectory="$(TestPath)" Command="$(DotNetFolder)$(DnuRestoreCommand)" Condition="'$(IsTemplate)' == 'true'" />
    <Message Text="Running $(DnuBuildCommand) on $(TestPath)" Condition="'$(IsTemplate)' == 'true'"/>
    <Exec WorkingDirectory="$(TestPath)" Command="$(DotNetFolder)$(DnuBuildCommand)" Condition="'$(IsTemplate)' == 'true'" />
  </Target>
  
  <Target Name="CompileTemplates" Inputs="@(TemplatesToVerify)" Outputs="$(TemplatesTestPath)%(Filename)\bin\Debug\%(Filename).1.0.0.nupkg" DependsOnTargets="ExtractAllTemplates">
    <PropertyGroup>
      <IsTemplate>false</IsTemplate>
      <IsTemplate Condition="'%(TemplatesToVerify.IsRulesPackage)' == 'false'">true</IsTemplate>
    </PropertyGroup>
    <PropertyGroup>
      <TargetName>%(TemplatesToVerify.Filename)</TargetName>
      <TestPath>$(TemplatesTestPath)$(TargetName)\</TestPath>
    </PropertyGroup>
    
    <GetDotNetFolder Condition="'$(DotNetFolderInPath)' == 'false' and '$(DotNetFolder)' == ''">
      <Output PropertyName="DotNetFolder" TaskParameter="DotNetPath"/>
    </GetDotNetFolder>

    <Message Text="Running $(DnuRestoreCommand) on $(TestPath)" Condition="'$(IsTemplate)' == 'true'"/>
    <Exec WorkingDirectory="$(TestPath)" Command="$(DotNetFolder)$(DnuRestoreCommand)" Condition="'$(IsTemplate)' == 'true'" />
    <Message Text="Running $(DnuBuildCommand) on $(TestPath)" Condition="'$(IsTemplate)' == 'true'"/>
    <Exec WorkingDirectory="$(TestPath)" Command="$(DotNetFolder)$(DnuBuildCommand)" Condition="'$(IsTemplate)' == 'true'" />
  </Target>

  <Target Name="VerifyTemplates" DependsOnTargets="InstallNpmPackages">
    <MakeDir Directories="$(TemplatesTestPath)" />
    <CallTarget Targets="ExtractAllTemplates" />
    <CallTarget Targets="CompileTemplates" />
    <CallTarget Targets="CompileRules" />
  </Target>

  <Target Name="Clean">
    <RemoveDir Directories="$(TemplatesTestPath)" />
  </Target>
  <Target Name="Verify" DependsOnTargets="VerifyTemplates" />
</Project>