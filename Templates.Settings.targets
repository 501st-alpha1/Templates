<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildThisFileDirectory)\Templates.BranchSettings.targets" />
    <Import Project="$(MSBuildThisFileDirectory)\tools\Common.tasks" />
    <PropertyGroup>
        <!-- If you build the project from the command prompt, use the TemplatesVSVersion environment variable. -->
        <TemplatesTargetVersion Condition=" '$(TemplatesTargetVersion)' == '' ">$(TemplatesVSVersion)</TemplatesTargetVersion>

        <!-- If you open VS directly from the Windows shell, use the VS version as the target version. -->
        <TemplatesTargetVersion Condition=" '$(TemplatesTargetVersion)' == '' ">$(VisualStudioVersion)</TemplatesTargetVersion>

        <!-- Usually these are environment variables, but they aren't set when running VS -->
        <TemplatesRoot Condition=" '$(TemplatesRoot)' == '' ">$(MSBuildThisFileDirectory)</TemplatesRoot>
        <TemplatesBin Condition=" '$(TemplatesBin)' == '' ">$(TemplatesRoot)artifacts\build</TemplatesBin>
        <TemplatesIntermediate Condition=" '$(TemplatesIntermediate)' == '' ">$(TemplatesRoot)intermediate</TemplatesIntermediate>
        <TemplatesSource Condition=" '$(TemplatesSource)' == '' ">$(TemplatesRoot)src</TemplatesSource>
        <TemplatesTest Condition=" '$(TemplatesTest)' == '' ">$(TemplatesRoot)test</TemplatesTest>
        <TemplatesTools Condition=" '$(TemplatesTools)' == '' ">$(TemplatesRoot)tools</TemplatesTools>
        <TemplatesSetup Condition=" '$(TemplatesSetup)' == '' ">$(TemplatesRoot)setup</TemplatesSetup>
        <TemplatesTestResults Condition=" '$(TemplatesTestResults)' == '' ">$(TemplatesRoot)TestResults</TemplatesTestResults>
    </PropertyGroup>
    
    <PropertyGroup>
        <IsOfficialBuild Condition="'$(IsOfficialBuild)' == ''">false</IsOfficialBuild>
        <UseExactPackageVersions Condition="'$(TemplateBuildBranch)' == 'release'">$(IsOfficialBuild)</UseExactPackageVersions>
        <UseExactPackageVersions Condition="'$(UseExactPackageVersions)' == ''">$(IsOfficialBuild)</UseExactPackageVersions>
        <TemplateVersion Condition="'$(TemplateVersion)' == ''">$(BUILD_NUMBER)</TemplateVersion>
        <TemplateVersion Condition="'$(TemplateVersion)' == ''">Local</TemplateVersion>
        <PackageType Condition="'$(TemplateBuildBranch)' == 'release'">$(ReleasePackageType)</PackageType>
        <PackageType Condition="'$(TemplateBuildBranch)' == 'dev'">$(DevPackageType)</PackageType>
        <SignedPackageSubPath>artifacts\Signed</SignedPackageSubPath>
        <ExternalPackageSubPath>artifacts\coherence\ext</ExternalPackageSubPath>
        <ApplicationInsightsPackageSource Condition="'$(ApplicationInsightsPackageSource)' == ''">https://www.myget.org/F/applicationinsights-sdk-labs/</ApplicationInsightsPackageSource>
        <AzureAdPackageSource Condition="'$(AzureAdPackageSource)' == '' and '$(TemplateBuildBranch)' == 'release'">https://www.myget.org/F/azureadwebstackrelease/api/v3/index.json</AzureAdPackageSource>
        <AzureAdPackageSource Condition="'$(AzureAdPackageSource)' == '' and '$(TemplateBuildBranch)' == 'dev'">https://www.myget.org/F/azureadwebstacknightly/api/v3/index.json</AzureAdPackageSource>
        <RoslynPackageSource Condition="'$(RoslynPackageSource)' == ''">https://www.myget.org/F/roslyn-nightly</RoslynPackageSource>
        <ForceNpmInstall Condition="'$(ForceNpmInstall)' == ''">false</ForceNpmInstall>
        <CoherenceDropFile>$(TemplatesBin)\Packages.source.txt</CoherenceDropFile>
        <RunTemplateUnitTests Condition="'$(RunTemplateUnitTests)' == ''">true</RunTemplateUnitTests>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(TemplatesTargetVersion)' == '14.0' ">
        <!-- Visual Studio 14 properties -->
        <TemplatesTargetVersionPath>\dev14</TemplatesTargetVersionPath>
        <VersionedReferencePath>Dev14</VersionedReferencePath>
        <TargetVsVersion>VS14</TargetVsVersion>
    </PropertyGroup>

    <PropertyGroup>
        <ApplicationInsightsPackageVersion>1.0.0-rc1</ApplicationInsightsPackageVersion>
        <NetCoreSemanticVersion Condition="'$(NetCoreSemanticVersion)' == ''">-rc2-23931</NetCoreSemanticVersion>
        <NetCorePlatformVersion Condition="'$(NetCorePlatformVersion)' == ''">1.0.0$(NetCoreSemanticVersion)</NetCorePlatformVersion>
        <DefaultNugetFeedSource Condition="'$(NugetFeedSource)' == ''">api.nuget.org=https://api.nuget.org/v3/index.json</DefaultNugetFeedSource>
        <NugetFeedSource Condition="'$(NugetFeedSource)' == '' and '$(TemplateBuildBranch)' == 'release' and '$(ReleaseNugetFeedSource)' != ''">$(ReleaseNugetFeedSource)|$(DefaultNugetFeedSource)</NugetFeedSource>
        <NugetFeedSource Condition="'$(NugetFeedSource)' == '' and '$(TemplateBuildBranch)' == 'dev' and '$(DevNugetFeedSource)' != ''">$(DevNugetFeedSource)|$(DefaultNugetFeedSource)</NugetFeedSource>
    </PropertyGroup>

    <PropertyGroup>
        <!-- Output -->
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <OutputPath>$(TemplatesBin)</OutputPath>
        <IntermediateOutputPath>$(TemplatesIntermediate)</IntermediateOutputPath>
        <BaseIntermediateOutputPath>$(TemplatesIntermediate)</BaseIntermediateOutputPath>
    </PropertyGroup>
    
    <Target Name="SetupPackageSource">
        <GetPackageSource Condition="'$(PackageSource)' == '' and '$(SetupDrop)' != ''" SetupDrop="$(SetupDrop)">
            <Output PropertyName="SetupPackageSource" TaskParameter="PackageSource"/>
        </GetPackageSource>
        <PropertyGroup>
        <!--
            <PackageSource>\\aspnetci\drops\Coherence-Signed\dev\15749\artifacts\Signed\Packages</PackageSource>
            --><PackageSource Condition="'$(SetupPackageSource)' != ''">$(SetupPackageSource)$(SignedPackageSubPath)\$(PackageType)</PackageSource>
            <PackageSourceExternal Condition="'$(SetupPackageSource)' != ''">$(SetupPackageSource)$(ExternalPackageSubPath)</PackageSourceExternal>
            <RemotePackageSource Condition="'$(PackageSource)' == '' and '$(TemplateBuildBranch)' == 'dev'">https://www.myget.org/F/aspnetvnext/api/v3/index.json</RemotePackageSource>
            <RemotePackageSource Condition="'$(PackageSource)' == '' and '$(TemplateBuildBranch)' == 'release'">https://www.myget.org/F/aspnetrelease/api/v3/index.json</RemotePackageSource>
            <PackageSourceForRestore Condition="'$(PackageSource)' != ''">$(PackageSource)</PackageSourceForRestore>
            <PackageSourceForRestore Condition="'$(PackageSourceExternal)' != ''">$(PackageSourceForRestore) -f $(PackageSourceExternal)</PackageSourceForRestore>
            <PackageSourceForRestore Condition="'$(PackageSourceForRestore)' == ''">$(RemotePackageSource)</PackageSourceForRestore>
            <PackageSourceForRestore Condition="'$(ApplicationInsightsPackageSource)' != ''">$(PackageSourceForRestore) -f $(ApplicationInsightsPackageSource)</PackageSourceForRestore>
            <PackageSourceForRestore Condition="'$(AzureAdPackageSource)' != ''">$(PackageSourceForRestore) -f $(AzureAdPackageSource)</PackageSourceForRestore>
            <PackageSourceForRestore Condition="'$(RoslynPackageSource)' != ''">$(PackageSourceForRestore) -f $(RoslynPackageSource)</PackageSourceForRestore>
            <PackageSourceForRestore>$(PackageSourceForRestore) -f https://api.nuget.org/v3/index.json</PackageSourceForRestore>
        </PropertyGroup>
        
        <Message Text="SetupPackageSource: $(SetupPackageSource)"/>
        <Message Text="PackageSource: $(PackageSource)"/>
        <Message Text="PackageSourceExternal: $(PackageSourceExternal)"/>
        <Message Text="PackageSourceFoRestore: $(PackageSourceForRestore)"/>
        
    </Target>
</Project>
