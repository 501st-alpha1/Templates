<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildThisFileDirectory)\Templates.BranchSettings.targets" />
    <PropertyGroup>
        <!-- If you build the project from the command prompt, use the TemplatesVSVersion environment variable. -->
        <TemplatesTargetVersion Condition=" '$(TemplatesTargetVersion)' == '' ">$(TemplatesVSVersion)</TemplatesTargetVersion>

        <!-- If you open VS directly from the Windows shell, use the VS version as the target version. -->
        <TemplatesTargetVersion Condition=" '$(TemplatesTargetVersion)' == '' ">$(VisualStudioVersion)</TemplatesTargetVersion>

        <!-- Usually these are environment variables, but they aren't set when running VS -->
        <TemplatesRoot Condition=" '$(TemplatesRoot)' == '' ">$(MSBuildThisFileDirectory)</TemplatesRoot>
        <TemplatesBin Condition=" '$(TemplatesBin)' == '' ">$(TemplatesRoot)artifacts\build</TemplatesBin>
        <TemplatesIntermediate Condition=" '$(TemplatesIntermediate)' == '' ">$(TemplatesRoot)intermediate</TemplatesIntermediate>
        <TemplatesSource Condition=" '$(TemplatesSource)' == '' ">$(TemplatesRoot)src</TemplatesSource>
        <TemplatesTest Condition=" '$(TemplatesTest)' == '' ">$(TemplatesRoot)test</TemplatesTest>
        <TemplatesTools Condition=" '$(TemplatesTools)' == '' ">$(TemplatesRoot)tools</TemplatesTools>
        <TemplatesSetup Condition=" '$(TemplatesSetup)' == '' ">$(TemplatesRoot)setup</TemplatesSetup>
        <TemplatesTestResults Condition=" '$(TemplatesTestResults)' == '' ">$(TemplatesRoot)TestResults</TemplatesTestResults>
    </PropertyGroup>
    
    <PropertyGroup>
        <IsOfficialBuild Condition="'$(IsOfficialBuild)' == ''">false</IsOfficialBuild>
        <UseExactPackageVersions Condition="'$(TemplateBuildBranch)' == 'release'">$(IsOfficialBuild)</UseExactPackageVersions>
        <UseExactPackageVersions Condition="'$(UseExactPackageVersions)' == ''">$(IsOfficialBuild)</UseExactPackageVersions>
        <PackageVersion Condition="'$(PackageVersion)' == ''">$(CoherenceBuildNumber)</PackageVersion>
        <PackageVersion Condition="'$(PackageVersion)' == ''">Latest</PackageVersion>
        <TemplateVersion Condition="'$(TemplateVersion)' == ''">$(BUILD_NUMBER)</TemplateVersion>
        <TemplateVersion Condition="'$(TemplateVersion)' == ''">Local</TemplateVersion>
        <PackageType Condition="'$(TemplateBuildBranch)' == 'release'">$(ReleasePackageType)</PackageType>
        <PackageType Condition="'$(TemplateBuildBranch)' == 'dev'">$(DevPackageType)</PackageType>
        <CoherencePackageSource Condition="'$(CoherencePackageSource)' != ''">$(CoherencePackageSource)\$(PackageType)</CoherencePackageSource>
        <PackageSource Condition="'$(PackageSource)' != ''">$(PackageSource)\$(PackageType)</PackageSource>
        <ApplicationInsightsPackageSource Condition="'$(ApplicationInsightsPackageSource)' == ''">https://www.myget.org/F/applicationinsights-sdk-labs/</ApplicationInsightsPackageSource>
        <AzureAdPackageSource Condition="'$(AzureAdPackageSource)' == '' and '$(TemplateBuildBranch)' == 'release'">https://www.myget.org/F/azureadwebstackrelease/</AzureAdPackageSource>
        <AzureAdPackageSource Condition="'$(AzureAdPackageSource)' == ''">https://www.myget.org/F/azureadwebstacknightly/</AzureAdPackageSource>
        <RoslynPackageSource Condition="'$(RoslynPackageSource)' == ''">https://www.myget.org/F/roslyn-nightly</RoslynPackageSource>
        <NetFxPackageSource Condition="'$(NetFxPackageSource)' == ''">https://www.myget.org/F/dotnet-corefx</NetFxPackageSource>
        <PackageSource Condition="'$(PackageSource)' == '' and '$(TemplateBuildBranch)' == 'dev'">https://www.myget.org/F/aspnetvnext/</PackageSource>
        <PackageSource Condition="'$(PackageSource)' == '' and '$(TemplateBuildBranch)' == 'release'">https://www.myget.org/F/aspnetrelease/</PackageSource>
        <PackageSourceForRestore>$(PackageSource) -f https://www.nuget.org/api/v2/</PackageSourceForRestore>
        <PackageSourceForRestore Condition="'$(ApplicationInsightsPackageSource)' != ''">$(PackageSourceForRestore) -f $(ApplicationInsightsPackageSource)</PackageSourceForRestore>
        <PackageSourceForRestore Condition="'$(AzureAdPackageSource)' != ''">$(PackageSourceForRestore) -f $(AzureAdPackageSource)</PackageSourceForRestore>
        <PackageSourceForRestore Condition="'$(RoslynPackageSource)' != ''">$(PackageSourceForRestore) -f $(RoslynPackageSource)</PackageSourceForRestore>
        <PackageSourceForRestore Condition="'$(NetFxPackageSource)' != ''">$(PackageSourceForRestore) -f $(NetFxPackageSource)</PackageSourceForRestore>
        <ForceNpmInstall Condition="'$(ForceNpmInstall)' == ''">false</ForceNpmInstall>
    </PropertyGroup>

    <PropertyGroup>
        <TemplatePackages>$(MSBuildThisFileDirectory)\TemplatePackages.txt</TemplatePackages>
        <DependencyListFilename>PackageList.generated.txt</DependencyListFilename>
        <MergedDependencyListPath>$(TemplatesBin)\PackageList.generated.txt</MergedDependencyListPath>
        <CoherenceDropFile>$(TemplatesBin)\Packages.source.txt</CoherenceDropFile>
        <WarnOnMissingPackage Condition="'$(WarnOnMissingPackage)' == ''">false</WarnOnMissingPackage>
    </PropertyGroup>
    
    <PropertyGroup Condition=" '$(TemplatesTargetVersion)' == '14.0' ">
        <!-- Visual Studio 14 properties -->
        <TemplatesTargetVersionPath>\dev14</TemplatesTargetVersionPath>
        <VersionedReferencePath>Dev14</VersionedReferencePath>
        <TargetVsVersion>VS14</TargetVsVersion>
    </PropertyGroup>

    <PropertyGroup>
        <ApplicationInsightsPackageVersion>1.0.0-beta7</ApplicationInsightsPackageVersion>
        <NugetFeedSource Condition="'$(NugetFeedSource)' == '' and '$(TemplateBuildBranch)' == 'release'">$(ReleaseNugetFeedSource)</NugetFeedSource>
        <NugetFeedSource Condition="'$(NugetFeedSource)' == '' and '$(TemplateBuildBranch)' == 'dev'">$(DevNugetFeedSource)</NugetFeedSource>
        <NugetFeedSource Condition="'$(NugetFeedSource)' == ''">api.nuget.org=https://api.nuget.org/v3/index.json</NugetFeedSource>
    </PropertyGroup>

    <PropertyGroup>
        <!-- Output -->
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <OutputPath>$(TemplatesBin)</OutputPath>
        <IntermediateOutputPath>$(TemplatesIntermediate)</IntermediateOutputPath>
        <BaseIntermediateOutputPath>$(TemplatesIntermediate)</BaseIntermediateOutputPath>
    </PropertyGroup>
    
    <ItemGroup>
        <TestTemplates Include="$(TemplatesBin)\test\ClassLibrary"/>
        <TestTemplates Include="$(TemplatesBin)\test\StarterWeb"/>
        <TestTemplates Include="$(TemplatesBin)\test\StarterWeb.IndividualAuth"/>
        <TestTemplates Include="$(TemplatesBin)\test\StarterWeb.Single"/>
        <TestTemplates Include="$(TemplatesBin)\test\StarterWeb.Multiple"/>
        <TestTemplates Include="$(TemplatesBin)\test\StarterWeb.AI"/>
        <TestTemplates Include="$(TemplatesBin)\test\StarterWeb.AI.IndividualAuth"/>
        <TestTemplates Include="$(TemplatesBin)\test\StarterWeb.AI.Single"/>
        <TestTemplates Include="$(TemplatesBin)\test\StarterWeb.AI.Multiple"/>
        <TestTemplates Include="$(TemplatesBin)\test\ConsoleApp"/>
        <TestTemplates Include="$(TemplatesBin)\test\EmptyWeb"/>
        <TestTemplates Include="$(TemplatesBin)\test\WebAPI"/>
        <TestTemplates Include="$(TemplatesBin)\test\WebAPI.AI"/>
    </ItemGroup>


    <!-- 
	
	 The ExternalReferencePackages serve as a list of packages which are not part of the coherence build.
         We use this list in two ways:
             
             1. To explictly specify which packages in the package closure which are not part of the package closure
                are allowed
             2. To determine which such packages get copied to ExternalPackages folder on official builds.

         If Version is not specified, any version in the closure will match and be copied, otherwise,
         the version will match any version of the package that starts with the version specified.

         Specify <DoNotCopy>true</DoNotCopy> for packages which should be checked against the closure
         but should not be copied.

    -->
    <ItemDefinitionGroup>
      <ExternalReferencePackage>
          <Version/>
          <DoNotCopy>false</DoNotCopy>
      </ExternalReferencePackage>
    </ItemDefinitionGroup>

    <ItemGroup>
      <ExternalReferencePackage Include="Ix-Async"/>
      <ExternalReferencePackage Include="Remotion.Linq"/>
      <ExternalReferencePackage Include="System.Reflection.Metadata"/>
      <ExternalReferencePackage Include="Newtonsoft.Json">
          <Version>6.0.6</Version>
      </ExternalReferencePackage>
      <ExternalReferencePackage Include="Microsoft.IdentityModel.Logging"/>
      <ExternalReferencePackage Include="System.IdentityModel.Tokens">
          <Version>5.0.0</Version>
      </ExternalReferencePackage>
      <ExternalReferencePackage Include="System.IdentityModel.Tokens.Jwt">
          <Version>5.0.0</Version>
      </ExternalReferencePackage>
      <ExternalReferencePackage Include="Microsoft.IdentityModel.Protocols">
          <Version>2.0.0</Version>
      </ExternalReferencePackage>
      <ExternalReferencePackage Include="Microsoft.IdentityModel.Protocols.OpenIdConnect"/>

      <!-- Application Insight packages -->
      <ExternalReferencePackage Include="Microsoft.ApplicationInsights.AspNet">
          <Version>$(ApplicationInsightsPackageVersion)</Version>
      </ExternalReferencePackage>
      <ExternalReferencePackage Include="Microsoft.ApplicationInsights">
          <Version>1.1</Version>
      </ExternalReferencePackage>
      
      <!-- Release Runtime Packages -->
      <ExternalReferencePackage Include="System.Collections.Immutable">
          <Version>1.1.36</Version>
      </ExternalReferencePackage>
      <ExternalReferencePackage Include="System.Runtime">
          <Version>4.0.0</Version>
      </ExternalReferencePackage>
      <ExternalReferencePackage Include="System.Reflection">
          <Version>4.0.10</Version>
      </ExternalReferencePackage>

      <ExternalReferencePackage Include="System.Net.NetworkInformation">
          <Version>4.0.10-beta-23123</Version>
      </ExternalReferencePackage>
      <ExternalReferencePackage Include="System.Net.Sockets">
          <Version>4.0.10-beta-23123</Version>
      </ExternalReferencePackage>
      
      <!-- CodeAnalysis Packages -->
      <ExternalReferencePackage Include="Microsoft.CodeAnalysis.Analyzers" />
      <ExternalReferencePackage Include="Microsoft.CodeAnalysis.Common" />
      <ExternalReferencePackage Include="Microsoft.CodeAnalysis.CSharp" />
    </ItemGroup>
</Project>
